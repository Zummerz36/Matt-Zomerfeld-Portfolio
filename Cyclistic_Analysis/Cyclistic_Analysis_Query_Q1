-- -- calculate the average difference between "start_time" and "end_time" in Cyclistic_Annual_Clean. present results in hh:mm:ss format
SELECT
  FORMAT_TIME( '%H:%M:%S', TIME( TIMESTAMP_SECONDS( CAST(AVG(TIMESTAMP_DIFF(end_time, start_time, SECOND)) AS INT64)))) AS average_difference
FROM
  `cyclistic-case-study-466019.Cyclystic_User_Data_Clean.Cyclistic_Q1_Clean`;



-- Calculate maximum ride_time
SELECT
  MAX(ride_time) AS max_ride_time
FROM
  `cyclistic-case-study-466019.Cyclystic_User_Data_Clean.Cyclistic_Q1_Clean`;



-- calculate the mode of "ride_time" in Cyclistic_Annual_Clean
SELECT
  ride_time
FROM
  `cyclistic-case-study-466019.Cyclystic_User_Data_Clean.Cyclistic_Q1_Clean`
GROUP BY
  ride_time
ORDER BY
  COUNT(ride_time) DESC
LIMIT
  1;

-- calculate the average "ride_time" for each week day
SELECT
  weekday,
  FORMAT_TIME( '%H:%M:%S', TIME_ADD( TIME '00:00:00', INTERVAL CAST(AVG(TIMESTAMP_DIFF(end_time, start_time, SECOND)) AS INT64) SECOND)) AS average_ride_duration
FROM
  `cyclistic-case-study-466019.Cyclystic_User_Data_Clean.Cyclistic_Q1_Clean`
GROUP BY
  weekday
ORDER BY
  weekday;

-- calculate average number of "ride_id" for each hour of the day
SELECT
  EXTRACT(HOUR
  FROM
    start_time) AS hour_of_day,
  CAST(COUNT(trip_id) AS FLOAT64) / COUNT(DISTINCT DATE(start_time)) AS average_rides_per_day_in_hour
FROM
  `cyclistic-case-study-466019.Cyclystic_User_Data_Clean.Cyclistic_Q1_Clean`
GROUP BY
  hour_of_day
ORDER BY
  hour_of_day;



-- calculate the average, maximum, and mode "ride_time" of rows marked "Customer" and "Subscriber" in Cyclistic_Q1_Clean
WITH
  RideTimesInSeconds AS (
  SELECT
    user_type,
    CAST(SPLIT(ride_time, ':')[
    OFFSET
      (0)] AS INT64) * 3600 + CAST(SPLIT(ride_time, ':')[
    OFFSET
      (1)] AS INT64) * 60 + CAST(SPLIT(ride_time, ':')[
    OFFSET
      (2)] AS INT64) AS ride_time_seconds,
    ride_time
  FROM
    `cyclistic-case-study-466019`.`Cyclystic_User_Data_Clean`.`Cyclistic_Q1_Clean`
  WHERE
    user_type IN ('Customer',
      'Subscriber') ),
  ModeRideTime AS (
  SELECT
    user_type,
    ride_time,
    COUNT(*) AS count_of_ride_time
  FROM
    `RideTimesInSeconds`
  GROUP BY
    user_type,
    ride_time
  QUALIFY
    ROW_NUMBER() OVER (PARTITION BY user_type ORDER BY COUNT(*) DESC,
      ride_time ASC) = 1 )
SELECT
  rts.user_type,
  FORMAT_TIME( '%H:%M:%S', TIME_ADD( TIME '00:00:00', INTERVAL CAST(AVG(rts.ride_time_seconds) AS INT64) SECOND)) AS average_ride_time,
  FORMAT_TIME( '%H:%M:%S', TIME_ADD(TIME '00:00:00', INTERVAL MAX(rts.ride_time_seconds) SECOND)) AS maximum_ride_time,
  mrt.ride_time AS mode_ride_time
FROM
  `RideTimesInSeconds` AS rts
INNER JOIN
  `ModeRideTime` AS mrt
ON
  rts.user_type = mrt.user_type
GROUP BY
  rts.user_type,
  mrt.ride_time
ORDER BY
  rts.user_type;
